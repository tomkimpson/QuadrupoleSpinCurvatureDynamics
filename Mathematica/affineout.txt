G0_00=0.0_dp
G0_01=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + (g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(g00dr + epsQ*(2.0_dp*g00dr*g00K*h00 + g00K**2.0_dp*h00dr + gCrossK*(2.0_dp*gCrossdr*h33 + gCrossK*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_02=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + (g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(g00dt + epsQ*(2.0_dp*g00dt*g00K*h00 + g00K**2.0_dp*h00dt + gCrossK*(2.0_dp*gCrossdt*h33 + gCrossK*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_03=0.0_dp
G0_10=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + (g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(g00dr + epsQ*(2.0_dp*g00dr*g00K*h00 + g00K**2.0_dp*h00dr + gCrossK*(2.0_dp*gCrossdr*h33 + gCrossK*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_11=0.0_dp
G0_12=0.0_dp
G0_13=((g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g33dr + epsQ*(2.0_dp*gCrossdr*gCrossK + h00dr + g33K*(2.0_dp*g33dr*h33 + g33K*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_20=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + (g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(g00dt + epsQ*(2.0_dp*g00dt*g00K*h00 + g00K**2.0_dp*h00dt + gCrossK*(2.0_dp*gCrossdt*h33 + gCrossK*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_21=0.0_dp
G0_22=0.0_dp
G0_23=((g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g33dt + epsQ*(2.0_dp*gCrossdt*gCrossK + h00dt + g33K*(2.0_dp*g33dt*h33 + g33K*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_30=0.0_dp
G0_31=((g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g33dr + epsQ*(2.0_dp*gCrossdr*gCrossK + h00dr + g33K*(2.0_dp*g33dr*h33 + g33K*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_32=((g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g33dt + epsQ*(2.0_dp*gCrossdt*gCrossK + h00dt + g33K*(2.0_dp*g33dt*h33 + g33K*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G0_33=0.0_dp
G1_00=-(g00dr + epsQ*(2.0_dp*g00dr*g00K*h00 + g00K**2.0_dp*h00dr + 2.0_dp*gCrossdr*gCrossK*h33 + gCrossK**2.0_dp*h33dr))/(2.0_dp*(g11K + epsQ*g11K**2.0_dp*h11))
G1_01=0.0_dp
G1_02=0.0_dp
G1_03=-(gCrossdr*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr))/(2.0_dp*g11K*(1.0_dp +epsQ*g11K*h11))
G1_10=0.0_dp
G1_11=(g11dr + 2.0_dp*epsQ*g11dr*g11K*h11.0_dp +epsQ*g11K**2.0_dp*h11dr)/(2.0_dp*g11K + 2.0_dp*epsQ*g11K**2.0_dp*h11)
G1_12=(g11dt + 2.0_dp*epsQ*g11dt*g11K*h11.0_dp +epsQ*g11K**2.0_dp*h11dt)/(2.0_dp*g11K + 2.0_dp*epsQ*g11K**2.0_dp*h11)
G1_13=0.0_dp
G1_20=0.0_dp
G1_21=(g11dt + 2.0_dp*epsQ*g11dt*g11K*h11.0_dp +epsQ*g11K**2.0_dp*h11dt)/(2.0_dp*g11K + 2.0_dp*epsQ*g11K**2.0_dp*h11)
G1_22=-(g22dr + 2.0_dp*epsQ*g22dr*g22K*h22 + epsQ*g22K**2.0_dp*h22dr)/(2.0_dp*(g11K + epsQ*g11K**2.0_dp*h11))
G1_23=0.0_dp
G1_30=-(gCrossdr*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr))/(2.0_dp*g11K*(1.0_dp +epsQ*g11K*h11))
G1_31=0.0_dp
G1_32=0.0_dp
G1_33=-(g33dr + epsQ*(2.0_dp*gCrossdr*gCrossK + h00dr + 2.0_dp*g33dr*g33K*h33 + g33K**2.0_dp*h33dr))/(2.0_dp*(g11K + epsQ*g11K**2.0_dp*h11))
G2_00=-(g00dt + epsQ*(2.0_dp*g00dt*g00K*h00 + g00K**2.0_dp*h00dt + 2.0_dp*gCrossdt*gCrossK*h33 + gCrossK**2.0_dp*h33dt))/(2.0_dp*(g22K + epsQ*g22K**2.0_dp*h22))
G2_01=0.0_dp
G2_02=0.0_dp
G2_03=-(gCrossdt*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt))/(2.0_dp*g22K*(1.0_dp +epsQ*g22K*h22))
G2_10=0.0_dp
G2_11=-(g11dt + 2.0_dp*epsQ*g11dt*g11K*h11.0_dp +epsQ*g11K**2.0_dp*h11dt)/(2.0_dp*(g22K + epsQ*g22K**2.0_dp*h22))
G2_12=(g22dr + 2.0_dp*epsQ*g22dr*g22K*h22 + epsQ*g22K**2.0_dp*h22dr)/(2.0_dp*g22K + 2.0_dp*epsQ*g22K**2.0_dp*h22)
G2_13=0.0_dp
G2_20=0.0_dp
G2_21=(g22dr + 2.0_dp*epsQ*g22dr*g22K*h22 + epsQ*g22K**2.0_dp*h22dr)/(2.0_dp*g22K + 2.0_dp*epsQ*g22K**2.0_dp*h22)
G2_22=(g22dt + 2.0_dp*epsQ*g22dt*g22K*h22 + epsQ*g22K**2.0_dp*h22dt)/(2.0_dp*g22K + 2.0_dp*epsQ*g22K**2.0_dp*h22)
G2_23=0.0_dp
G2_30=-(gCrossdt*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt))/(2.0_dp*g22K*(1.0_dp +epsQ*g22K*h22))
G2_31=0.0_dp
G2_32=0.0_dp
G2_33=-(g33dt + epsQ*(2.0_dp*gCrossdt*gCrossK + h00dt + 2.0_dp*g33dt*g33K*h33 + g33K**2.0_dp*h33dt))/(2.0_dp*(g22K + epsQ*g22K**2.0_dp*h22))
G3_00=0.0_dp
G3_01=(g11K*(1.0_dp +epsQ*g11K*h11)*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g00dr + epsQ*(2.0_dp*g00dr*g00K*h00 + g00K**2.0_dp*h00dr + gCrossK*(2.0_dp*gCrossdr*h33 + gCrossK*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_02=(g11K*(1.0_dp +epsQ*g11K*h11)*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g00dt + epsQ*(2.0_dp*g00dt*g00K*h00 + g00K**2.0_dp*h00dt + gCrossK*(2.0_dp*gCrossdt*h33 + gCrossK*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_03=0.0_dp
G3_10=(g11K*(1.0_dp +epsQ*g11K*h11)*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g00dr + epsQ*(2.0_dp*g00dr*g00K*h00 + g00K**2.0_dp*h00dr + gCrossK*(2.0_dp*gCrossdr*h33 + gCrossK*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_11=0.0_dp
G3_12=0.0_dp
G3_13=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + g11K*(1.0_dp +epsQ*g11K*h11)*(g33dr + epsQ*(2.0_dp*gCrossdr*gCrossK + h00dr + g33K*(2.0_dp*g33dr*h33 + g33K*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_20=(g11K*(1.0_dp +epsQ*g11K*h11)*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(g00dt + epsQ*(2.0_dp*g00dt*g00K*h00 + g00K**2.0_dp*h00dt + gCrossK*(2.0_dp*gCrossdt*h33 + gCrossK*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_21=0.0_dp
G3_22=0.0_dp
G3_23=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + g11K*(1.0_dp +epsQ*g11K*h11)*(g33dt + epsQ*(2.0_dp*gCrossdt*gCrossK + h00dt + g33K*(2.0_dp*g33dt*h33 + g33K*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_30=0.0_dp
G3_31=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdr + epsQ*gCrossdr*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dr*h00 + g00K*h00dr + g33dr*h33 + g33K*h33dr)) + g11K*(1.0_dp +epsQ*g11K*h11)*(g33dr + epsQ*(2.0_dp*gCrossdr*gCrossK + h00dr + g33K*(2.0_dp*g33dr*h33 + g33K*h33dr))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_32=(gCrossK*(1.0_dp +epsQ*g00K*h00 + epsQ*g33K*h33)*(gCrossdt + epsQ*gCrossdt*(g00K*h00 + g33K*h33) + epsQ*gCrossK*(g00dt*h00 + g00K*h00dt + g33dt*h33 + g33K*h33dt)) + g11K*(1.0_dp +epsQ*g11K*h11)*(g33dt + epsQ*(2.0_dp*gCrossdt*gCrossK + h00dt + g33K*(2.0_dp*g33dt*h33 + g33K*h33dt))))/(2.0_dp*(-(gCrossK + epsQ*g00K*gCrossK*h00 + epsQ*g33K*gCrossK*h33)**2 + (g00K + epsQ*g00K**2.0_dp*h00 + epsQ*gCrossK**2.0_dp*h33)*(g33K + epsQ*(gCrossK**2 + h00 + g33K**2.0_dp*h33))))
G3_33=0.0_dp
